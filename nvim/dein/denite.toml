[[plugins]]
repo = 'Shougo/denite.nvim'
on_cmd   = ['Denite', 'DeniteBufferDir', 'DeniteCursorWord']
on_func  = ['denite#']
hook_add = ''' "{{{
"現在開いているファイルのディレクトリ下のファイル一覧。
nnoremap <silent> sN :<C-u>DeniteBufferDir file/rec<CR>
" buffer list
nnoremap <silent> s; :<C-u>Denite buffer<CR>
" buffer & recent file list
nnoremap <silent> sm :<C-u>Denite buffer file/old<CR>
nnoremap <silent> s/ :<C-u>Denite line<CR>
"}}} '''
hook_post_source = ''' "{{{
if dein#tap('denite.nvim')
    " Change denite default options
    call denite#custom#option('default', {
      \ 'prompt': '>>>',
      \ 'auto-accel': 'true',
      \ 'auto-resize': 'true',
      \ 'filter-updatetime': 100,
      \ })

	" Change matchers.
	call denite#custom#source(
	\ 'file_mru', 'matchers', ['matcher/fuzzy', 'matcher/project_files'])
	call denite#custom#source(
	\ 'file/rec', 'matchers', ['matcher/cpsm'])

	" Change sorters.
	call denite#custom#source(
	\ 'file/rec', 'sorters', ['sorter/sublime'])

	" Add custom menus
	let s:menus = {}

	let s:menus.my_commands = {
		\ 'description': 'Example commands'
		\ }
	let s:menus.my_commands.command_candidates = [
		\ ['Split the window', 'vnew'],
		\ ['Format code', 'FormatCode', 'go,python'],
		\ ]

	call denite#custom#var('menu', 'menus', s:menus)

	" Define alias
	call denite#custom#alias('source', 'file/rec/git', 'file/rec')
	call denite#custom#var('file/rec/git', 'command',
	      \ ['git', 'ls-files', '-co', '--exclude-standard'])

	call denite#custom#alias('source', 'file/rec/py', 'file/rec')
	call denite#custom#var('file/rec/py', 'command',['scantree.py'])
    call denite#custom#alias('source', 'todo', 'grep')

	" Change ignore_globs
	call denite#custom#filter('matcher/ignore_globs', 'ignore_globs',
	      \ [ '.git/', '.ropeproject/', '__pycache__/', 'build/',
	      \   'venv/', 'images/', '*.min.*', 'img/', 'fonts/'])

endif
" }}} '''
[plugins.ftplugin]
denite = ''' "{{{
  let b:auto_cursorline_disabled = 1
  nnoremap <silent><buffer> <C-j> j
  nnoremap <silent><buffer> <C-k> k
  nnoremap <silent><buffer><expr> <BS>    denite#do_map('move_up_path')
  nnoremap <silent><buffer><expr> <C-a>   denite#do_map('do_action', 'my_file_rec')
  nnoremap <silent><buffer><expr> <C-c>   denite#do_map('quit')
  nnoremap <silent><buffer><expr> <C-g>   denite#do_map('do_action', 'grep')
  nnoremap <silent><buffer><expr> <C-x>   denite#do_map('do_action', 'quick_move')
  nnoremap <silent><buffer><expr> <CR>    denite#do_map('do_action')
  nnoremap <silent><buffer><expr> <Tab>   denite#do_map('choose_action')
  nnoremap <silent><buffer><expr> <Space> denite#do_map('toggle_select').'j'
  nnoremap <silent><buffer><expr> a       denite#do_map('open_filter_buffer')
  nnoremap <silent><buffer><expr> i       denite#do_map('open_filter_buffer')
  nnoremap <silent><buffer><expr> d       denite#do_map('do_action', 'delete')
  nnoremap <silent><buffer><expr> p       denite#do_map('do_action', 'preview')
  nnoremap <silent><buffer><expr> q       denite#do_map('quit')
"}}} '''
denite-filter = ''' "{{{
  let b:auto_cursorline_disabled = 1
"   inoremap <silent><buffer><expr> <BS>    denite#do_map('move_up_path')
  inoremap <silent><buffer><expr> <C-c>   denite#do_map('quit')
  nnoremap <silent><buffer><expr> <C-c>   denite#do_map('quit')
"}}} '''
