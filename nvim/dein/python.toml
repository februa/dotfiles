# jedi vim python completion {{{
[[plugins]]
repo = 'davidhalter/jedi-vim'
on_ft = 'python'
hook_add = '''
" jedi本体の補完は切る（deoplete-jediで非同期処理をしてくれるため）
let g:jedi#completions_enabled = 0
let g:jedi#auto_vim_configuration = 0
let g:jedi#popup_select_first = 0
let g:jedi#show_call_signatures = "1"

let g:jedi#goto_command = "<leader>d"
let g:jedi#goto_assignments_command = "<leader>g"
let g:jedi#goto_definitions_command = ""
let g:jedi#documentation_command = "K"
let g:jedi#usages_command = "<leader>n"
let g:jedi#rename_command = "<leader>r"
" I don't want the docstring window to popup during completion
" autocmd FileType python setlocal completeopt-=preview
'''
[[plugins]]
repo = 'deoplete-plugins/deoplete-jedi'
on_ft = 'python'
hook_add = '''
let g:deoplete#sources#jedi#server_timeout=100
let g:deoplete#sources#jedi#statement_length=100
let g:deoplete#sources#jedi#show_docstring=1
'''

# }}}
# 補完 {{{
[[plugins]]
repo = 'Shougo/deoplete.nvim'
on_i = 1
hook_add = '''
    let g:deoplete#enable_at_startup = 1
    let g:deoplete#enable_ignore_case = 1
    let g:deoplete#enable_smart_case = 1

    " <TAB>: completion.
    imap <silent><expr> <TAB> pumvisible() ? "\<C-n>" : <SID>check_back_space() ? "\<TAB>" : deoplete#mappings#manual_complete()
    function! s:check_back_space() abort
        let col = col('.') - 1
        return !col || getline('.')[col - 1]  =~ '\s'
    endfunction

    " <S-TAB>: completion back.
    inoremap <expr><S-TAB>  pumvisible() ? "\<C-p>" : "\<C-h>"

    inoremap <expr><tab> pumvisible() ? "\<C-n>" : neosnippet#expandable_or_jumpable() ? "\<Plug>(neosnippet_expand_or_jump)" : "\<tab>"
let g:deoplete#enable_at_startup = 1
if has('python3') && has('win64')
    let g:python3_host_prog = 'C:\Users\febru\AppData\Local\Programs\Python\Python37\python.exe'
endif
'''
[[plugins]]
repo = 'Shougo/neosnippet'
hook_source = '''
  imap <C-k> <Plug>(neosnippet_expand_or_jump)
  smap <C-k> <Plug>(neosnippet_expand_or_jump)
  xmap <C-k> <Plug>(neosnippet_expand_target)
  if has('conceal')
    set conceallevel=2 concealcursor=niv
  endif
'''
on_i  = 1
on_ft = ['snippet']
depends = ['neosnippet-snippets']

[[plugins]]
repo = 'Shougo/neosnippet-snippets'

[[plugins]]
repo = 'ncm2/float-preview.nvim'

# }}}
[[plugins]]
repo = 'lervag/vimtex'
on_ft = 'tex'
if = '''has('unix') || has('mac')'''
hook_post_source = '''
call deoplete#custom#var('omni', 'input_patterns', {
    \ 'tex': g:vimtex#re#deoplete
    \})
'''
hook_add = '''
if has('mac')
  let g:vimtex_view_general_viewer='skim'
elseif has('win64')
  let g:vimtex_view_general_viewer='C:\Program Files (x86)\Adobe\Acrobat Reader DC\Reader\AcroRd32.exe'
else
  let g:vimtex_view_general_viewer='evince'
endif
if has('nvim')
  let g:vimtex_compiler_progname
        \ = 'nvr'
endif
let g:vimtex_fold_manual = 1
'''

[[plugins]]
repo = 'Vimjas/vim-python-pep8-indent'
on_ft = 'python'
